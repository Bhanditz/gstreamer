<!-- ##### SECTION Title ##### -->
GstPlugin

<!-- ##### SECTION Short_Description ##### -->
Container for features loaded from a shared object module

<!-- ##### SECTION Long_Description ##### -->
<para>
GStreamer is extensible so <classname>GstElements</classname> can be loaded at runtime. A plugin
system can provide one or more of the basic <application>GStreamer</application> 
#GstPluginFeature subclasses.
</para>
<para>
A plugin should export a symbol plugin_desc that is a struct of type #GstPluginDesc. 
the plugin loader will check the version of the core library the plugin was linked against
and will create a new #GstPlugin. It will then call the #GstPluginInitFunc function
that was provided in the plugin_desc.
</para>
<para>
Once you have a handle to a #GstPlugin, you can add any object that subclasses #GstPluginFeature.
</para>
<para>
use gst_plugin_find_feature() and gst_plugin_get_feature_list() to find features in a plugin.
</para>
<para>
Usually plugins are always automaticlly loaded so you don't need to call gst_plugin_load() explicitly 
to bring it into memory. There are options to statically link plugins to an app or even
use GStreamer without a plugin repository in which case gst_plugin_load() can be needed 
to bring the plugin into memory.
</para>

<!-- ##### SECTION See_Also ##### -->
<para>
#GstPluginFeature, #GstType, #GstAutoplug, #GstElementFactory
</para>

<!-- ##### FUNCTION gst_plugin_error_quark ##### -->
<para>
Get the error quark
</para>

@Returns: The error quark used in GError messages


<!-- ##### MACRO GST_PLUGIN_ERROR ##### -->
<para>
The error quark
</para>



<!-- ##### ENUM GstPluginError ##### -->
<para>
The plugin loading errors
</para>

@GST_PLUGIN_ERROR_MODULE: The plugin could not be loaded
@GST_PLUGIN_ERROR_DEPENDENCIES: The plugin has unresolved dependencies
@GST_PLUGIN_ERROR_NAME_MISMATCH: 

<!-- ##### MACRO GST_PLUGIN ##### -->
<para>

</para>

@plugin: 


<!-- ##### STRUCT GstPlugin ##### -->
<para>
The plugin object
</para>

@desc: 
@filename: 
@features: 
@numfeatures: 
@manager: 
@module: 
@_gst_reserved: 

<!-- ##### STRUCT GstPluginDesc ##### -->
<para>
A plugins should export a variable of this type called plugin_desc. This plugin
loaded will use this variable to initialize the plugin.
</para>

@major_version: The minor version of the gstreamer library this plugin was created with
@minor_version: The minor version of the gstreamer library this plugin was created with
@name: The name of the plugin
@description: 
@plugin_init: The init function of this plugin.
@plugin_exit: 
@version: 
@license: 
@package: 
@origin: 
@_gst_reserved: 

<!-- ##### USER_FUNCTION GstPluginInitFunc ##### -->
<para>
A plugin should provide a pointer to a function of this type in the plugin_desc struct.
It will be called by the loader at statup.
</para>

@plugin: The plugin object that can be used to register stuff for this plugin.
@Returns: A boolean indicating success or failure.
<!-- # Unused Parameters # -->
@module: The <classname>GModule</classname> it was loaded from


<!-- ##### USER_FUNCTION GstPluginExitFunc ##### -->
<para>

</para>

@plugin: 


<!-- ##### MACRO GST_PLUGIN_DEFINE ##### -->
<para>

</para>

@major: 
@minor: 
@name: 
@description: 
@init: 
@version: 
@license: 
@package: 
@origin: 


<!-- ##### MACRO GST_PLUGIN_DEFINE_STATIC ##### -->
<para>

</para>

@major: 
@minor: 
@name: 
@description: 
@init: 
@version: 
@license: 
@package: 
@origin: 


<!-- ##### MACRO GST_LICENSE_UNKNOWN ##### -->
<para>

</para>



<!-- ##### USER_FUNCTION GstPluginFilter ##### -->
<para>

</para>

@plugin: 
@user_data: 
@Returns: 


<!-- ##### MACRO GST_TYPE_PLUGIN ##### -->
<para>

</para>



<!-- ##### FUNCTION gst_plugin_get_type ##### -->
<para>

</para>

@Returns: 


<!-- ##### FUNCTION gst_plugin_get_name ##### -->
<para>

</para>

@plugin: 
@Returns: 


<!-- ##### FUNCTION gst_plugin_get_description ##### -->
<para>

</para>

@plugin: 
@Returns: 


<!-- ##### FUNCTION gst_plugin_get_filename ##### -->
<para>

</para>

@plugin: 
@Returns: 


<!-- ##### FUNCTION gst_plugin_get_license ##### -->
<para>

</para>

@plugin: 
@Returns: 


<!-- ##### FUNCTION gst_plugin_get_package ##### -->
<para>

</para>

@plugin: 
@Returns: 


<!-- ##### FUNCTION gst_plugin_get_origin ##### -->
<para>

</para>

@plugin: 
@Returns: 


<!-- ##### FUNCTION gst_plugin_get_module ##### -->
<para>

</para>

@plugin: 
@Returns: 


<!-- ##### FUNCTION gst_plugin_is_loaded ##### -->
<para>

</para>

@plugin: 
@Returns: 


<!-- ##### FUNCTION gst_plugin_feature_filter ##### -->
<para>

</para>

@plugin: 
@filter: 
@first: 
@user_data: 
@Returns: 


<!-- ##### FUNCTION gst_plugin_list_feature_filter ##### -->
<para>

</para>

@list: 
@filter: 
@first: 
@user_data: 
@Returns: 


<!-- ##### FUNCTION gst_plugin_name_filter ##### -->
<para>

</para>

@plugin: 
@name: 
@Returns: 


<!-- ##### FUNCTION gst_plugin_get_feature_list ##### -->
<para>

</para>

@plugin: 
@Returns: 


<!-- ##### FUNCTION gst_plugin_find_feature ##### -->
<para>

</para>

@plugin: 
@name: 
@type: 
@Returns: 


<!-- ##### FUNCTION gst_plugin_load_file ##### -->
<para>

</para>

@filename: 
@error: 
@Returns: 


<!-- ##### FUNCTION gst_plugin_unload_plugin ##### -->
<para>

</para>

@plugin: 
@Returns: 


<!-- ##### FUNCTION gst_plugin_add_feature ##### -->
<para>

</para>

@plugin: 
@feature: 


<!-- ##### FUNCTION gst_plugin_load ##### -->
<para>

</para>

@name: 
@Returns: 


<!-- ##### FUNCTION gst_library_load ##### -->
<para>

</para>

@name: 
@Returns: 


