<!-- ##### SECTION Title ##### -->
GstPipeline

<!-- ##### SECTION Short_Description ##### -->
Top-level bin with scheduling and pipeline management functionality.

<!-- ##### SECTION Long_Description ##### -->
<para>
In almost all cases, you'll want to use a GstPipeline when creating a
filter graph.  The GstPipeline will manage all the scheduling issues,
including threading, as well as provide simple interfaces to common
functions, like 'Play'.
</para>

<para>the pipeline also has the capability to autoplug. This feature
allows you to only define the input/output plugins and let the
pipeline figure out what plugins to use.</para>

<!-- ##### SECTION See_Also ##### -->
<para>

</para>

<!-- ##### STRUCT GstPipeline ##### -->
<para>

</para>


<!-- ##### FUNCTION gst_pipeline_new ##### -->
<para>

</para>

@name: 
@Returns: 


<!-- ##### FUNCTION gst_pipeline_add_sink ##### -->
<para>

</para>

@pipeline: 
@sink: 


<!-- ##### FUNCTION gst_pipeline_add_src ##### -->
<para>

</para>

@pipeline: 
@src: 


<!-- ##### FUNCTION gst_pipeline_autoplug ##### -->
<para>

</para>

@pipeline: 
@Returns: 


<!-- ##### MACRO gst_pipeline_destroy ##### -->
<para>
destroys the pipeline
</para>

@pipeline: GstPipeline to destroy


<!-- ##### FUNCTION gst_pipeline_iterate ##### -->
<para>

</para>

@pipeline: 


