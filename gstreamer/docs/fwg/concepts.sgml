<chapter id="cha-plugins">
  <title>Plugins</title>
  <para>
    Extensions to &GStreamer; can be made using a plugin mechanism.  This is
    used extensively in &GStreamer; even if only the standard package is
    being used: a few very basic functions reside in the core library, and
    all others are in a standard set of plugins.
  </para>
  <para>
    Plugins can extend GStreamer in several
  </para>
  <para>
    Plugins are only loaded when needed: a plugin registry is used to
    store the details of the plugins so that it is not neccessary to load
    all plugins to determine which are needed.
    This registry needs to be updated when a new plugin is added to the
    system: see the <emphasis>gstreamer-register</emphasis> utility and the
    documentation in the <emphasis>GStreamer Application Development
    Manual</emphasis> for more details.
  </para>
  <para>
    User extensions to &GStreamer; can be installed in the main plugin
    directory, and will immediately be available for use in applications.
    <emphasis>gstreamer-register</emphasis> should be run to update
    the repository: but the system should work correctly even if it hasn't
    been - it will just take longer to load the correct plugin.
  </para>
  <para>
    User specific plugin directories and registries will be available in future
    versions of &GStreamer;.
  </para>
</chapter>

<chapter id="cha-elements">
  <title>Elements</title>
  <para>
    Elements are at the core of &GStreamer;.  Without elements, &GStreamer; is
    just a bunch of pipe fittings with nothing to connect.  A large number of
    elements (filters, sources and sinks) ship with &GStreamer;, but extra
    elements can also be written.
  </para>
  <para>
    An element may be constructed in several different ways, but all must
    conform to the same basic rules.  A simple filter may be built with the
    FilterFactory, where the only code that need be written is the actual
    filter code.  A more complex filter, or a source or sink, will need to be
    written out fully for complete access to the features and performance
    possible with &GStreamer;.
  </para>
  <para>
    The implementation of a new element will be contained in a plugin:
    a single plugin may contain the implementation of several elements, or
    just a single one.
  </para>
</chapter>

<chapter id="cha-buffers">
  <title>Buffers</title>
  <para>
  </para>
</chapter>

<chapter id="cha-scheduling">
  <title>Scheduling</title>
  <para>
  </para>
</chapter>

<chapter id="cha-chainloop">
  <title>Chain vs Loop Elements</title>
  <para>
  </para>
</chapter>

<chapter id="cha-typing">
  <title>Typing and Properties</title>
  <para>
  </para>
</chapter>

<chapter id="cha-metadata">
  <title>Metadata</title>
  <para>
  </para>
</chapter>
