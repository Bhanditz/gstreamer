AC_INIT(gst/gstobject.h)

AM_CONFIG_HEADER(config.h)

STREAMER_MAJOR_VERSION=0
STREAMER_MINOR_VERSION=0
STREAMER_MICRO_VERSION=9.2
STREAMER_VERSION=$STREAMER_MAJOR_VERSION.$STREAMER_MINOR_VERSION.$STREAMER_MICRO_VERSION

dnl libtool
STREAMER_CURRENT=0
STREAMER_REVISION=0
STREAMER_AGE=0

AM_INIT_AUTOMAKE(gstreamer, $STREAMER_VERSION)

AC_SUBST(STREAMER_MAJOR_VERSION)
AC_SUBST(STREAMER_MINOR_VERSION)
AC_SUBST(STREAMER_MICRO_VERSION)
AC_SUBST(STREAMER_VERSION)

AC_SUBST(STREAMER_CURRENT)
AC_SUBST(STREAMER_REVISION)
AC_SUBST(STREAMER_AGE)


AM_MAINTAINER_MODE

AC_ISC_POSIX
AC_PROG_CC
AC_STDC_HEADERS
AC_ARG_PROGRAM

AM_DISABLE_STATIC
AC_LIBTOOL_DLOPEN
AM_PROG_LIBTOOL

AM_PATH_GLIB(1.2.0,
            [LIBS="$LIBS $GLIB_LIBS" CFLAGS="$CFLAGS $GLIB_CFLAGS"],
            AC_MSG_ERROR(Cannot find glib: Is glib-config in path?),
            glib gmodule gthread)
AM_PATH_GTK(1.2.0)

dnl Check for libghttp
AC_CHECK_LIB(ghttp,ghttp_request_new,
             [LIBS="$LIBS -lghttp" HAVE_LIBGHTTP="yes"],
             AC_MSG_WARN(Cannot find libghttp: can't build gsthttpsrc),
             $LIBS)
AC_DEFINE(HAVE_LIBGHTTP)
AM_CONDITIONAL(HAVE_LIBGHTTP, test "x$HAVE_LIBGHTTP" = "xyes")


AC_CHECK_HEADERS(asm/atomic.h, AC_DEFINE(HAVE_ATOMIC_H))


AC_PATH_PROG(XML_CONFIG,xml-config,no)
if test x$XML_CONFIG = xno;then
  AC_MSG_ERROR(Couldn't find xml-config)
fi
XML_LIBS=`xml-config --libs`
XML_CFLAGS=`xml-config --cflags`
AC_SUBST(XML_LIBS)
AC_SUBST(XML_CFLAGS)
AC_DEFINE(HAVE_LIBXML)
AM_CONDITIONAL(HAVE_LIBXML, test "x$HAVE_LIBXML" = "xyes")


AC_CHECK_HEADER(mmx.h,[
  AC_DEFINE(HAVE_LIBMMX), []])
AM_CONDITIONAL(HAVE_LIBMMX, test "x$HAVE_LIBMMX" = "xyes")

AC_CHECK_HEADER(xaudio/decoder.h,[
  AC_DEFINE(HAVE_XAUDIO) 
  HAVE_XAUDIO="yes", []
])
AM_CONDITIONAL(HAVE_XAUDIO, test "x$HAVE_XAUDIO" = "xyes")

AC_CHECK_HEADER(xaudio/decoder.h,[
  AC_DEFINE(HAVE_XAUDIO) 
  HAVE_XAUDIO="yes", []
])
AM_CONDITIONAL(HAVE_XAUDIO, test "x$HAVE_XAUDIO" = "xyes")

PLUGINS_DIR=${libdir}/plugins
AC_DEFINE_UNQUOTED(PLUGINS_DIR,"$PLUGINS_DIR")
AC_SUBST(PLUGINS_DIR)

PLUGINS_SRCDIR=`pwd`/$srcdir
AC_DEFINE_UNQUOTED(PLUGINS_SRCDIR,"$PLUGINS_SRCDIR")
AC_SUBST(PLUGINS_SRCDIR)

AC_ARG_ENABLE(plugin-srcdir,
[  --enable-plugin-srcdir	allow tests/demos to use non-installed plugins ],
[AC_DEFINE(PLUGINS_USE_SRCDIR)])

AC_DEFINE(PLUGINS_USE_SRCDIR)

AC_ARG_ENABLE(debug,
[  --enable-debug		spews lots of useless info at runtime],
[AC_DEFINE(DEBUG_ENABLED)])

AC_ARG_ENABLE(profiling,
[  --enable-profiling		adds -pg to compiler commandline, for profiling],
[CFLAGS="$CFLAGS -pg"])

AC_MSG_CHECKING(DVD CSS code)

dnl check if css.c exists (FIXME)
if test -f plugins/dvdsrc/css.c
then
  AC_MSG_RESULT(yes)
  HAVE_DECSS="yes"
else
  AC_MSG_RESULT(no)
  HAVE_DECSS="no"
fi
AM_CONDITIONAL(HAVE_DECSS, test "x$HAVE_DECSS" = "xyes")


AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

AC_CHECK_PROG(GTKDOC, gtkdoc-mkdb, true, false)
AM_CONDITIONAL(HAVE_GTK_DOC, $GTKDOC)


AC_CONFIG_SUBDIRS(gist)
AC_CONFIG_SUBDIRS(plugins/mp3decode/xing/libxing)

AC_OUTPUT([Makefile
gst/Makefile
gst/types/Makefile
gst/meta/Makefile
gst/elements/Makefile
gst/xml/Makefile
plugins/Makefile
plugins/au/Makefile
plugins/wav/Makefile
plugins/mp3decode/Makefile
plugins/mp3decode/xa/Makefile
plugins/mp3decode/xing/Makefile
plugins/mp3decode/mpg123/Makefile
plugins/mp3decode/parse/Makefile
plugins/mpeg2/Makefile
plugins/mpeg2/parse/Makefile
plugins/mpeg2/ac3parse/Makefile
plugins/mpeg2/ac3dec/Makefile
plugins/mpeg1/Makefile
plugins/mpeg1/parse/Makefile
plugins/effects/Makefile
plugins/effects/stereo/Makefile
plugins/effects/volume/Makefile
plugins/visualization/Makefile
plugins/visualization/spectrum/Makefile
plugins/visualization/vumeter/Makefile
plugins/visualization/synaesthesia/Makefile
plugins/visualization/smoothwave/Makefile
plugins/dvdsrc/Makefile
plugins/vcdsrc/Makefile
plugins/cobin/Makefile
plugins/rtjpeg/Makefile
test/Makefile
test/xml/Makefile
test/bindings/Makefile
test/cothreads/Makefile
editor/Makefile
tools/Makefile
docs/Makefile
stamp.h])
