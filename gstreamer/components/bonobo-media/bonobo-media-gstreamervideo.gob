/* vim: set syntax=c: -*- Mode: C; tab-width: 8; indent-tabs-mode: t; c-basic-offset: 8 -*-
*/
%at{
 /* bonobo-media-gstreamer: GStreamer player using the Bonobo:Meida interfaces
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 *
 * Copyright (c) 2001  Ali Abdin   <aliabdin@aucegypt.edu> and
 *                     ÉRDI Gergõ  <cactus@cactus.rulez.org>
 *                     Wim Taymans <wim.taymans@chello.be>
 */
%}

%header{
#include <bonobo-media/Bonobo-Media.h>
#include <bonobo-media/bonobo-media-video.h>
#include <gstplay/gstplay.h>
%}

%privateheader{
%}

%{
#include <bonobo/bonobo-control.h>
#include <bonobo/bonobo-exception.h>

#include <bonobo-media/bonobo-media-video-private.h>

%}

class Bonobo:Media:GStreamervideo from Bonobo:Media:Video
{
   	private GstPlay 	*play;
   	//private GtkWidget 	*play;

	override (Bonobo:Media:Video)
		Bonobo_Control get_video_control (BonoboMediaVideo *video,
				                  CORBA_Environment *ev)
		{
			BonoboControl *control;
			Bonobo_Control bcontrol;
			Self *self = SELF (video);
			GtkWidget *button;

			//button = gtk_button_new_with_label("test");
  			//gtk_widget_show (button);
			
			//control = bonobo_control_new (button);
			control = bonobo_control_new (GTK_WIDGET (self->_priv->play));

			gtk_widget_realize (GTK_WIDGET (self->_priv->play));

			bcontrol = bonobo_object_corba_objref (BONOBO_OBJECT (control));

			return bcontrol;
		}

	public Bonobo:Media:GStreamervideo* new (GstPlay *play)
		{
			Self *self;
			Bonobo_Media_Video corba_video;
			BonoboMediaVideo *video;
			
			self = GET_NEW;

			corba_video = bonobo_media_video_corba_object_create (BONOBO_OBJECT (self));

			self->_priv->play = play;
			
			video = bonobo_media_video_construct (BONOBO_MEDIA_VIDEO (self), corba_video);

			return self;
		}
}
